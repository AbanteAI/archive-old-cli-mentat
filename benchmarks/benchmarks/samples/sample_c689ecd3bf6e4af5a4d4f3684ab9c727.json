{
    "title": "Add embeddings database dict",
    "description": "",
    "id": "c689ecd3bf6e4af5a4d4f3684ab9c727",
    "parent_id": "",
    "repo": "http://github.com/granawkins/latent-dictionary",
    "merge_base": "1694435e",
    "diff_merge_base": "diff --git a/.gitignore b/.gitignore\nindex 44e8bdf..2e688db 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -6 +6,2 @@\n frontend/node_modules\n+frontend/package-lock.json\ndiff --git a/backend/docker-compose.yaml b/backend/docker-compose.yaml\ndeleted file mode 100644\nindex 1b0f62e..0000000\n--- a/backend/docker-compose.yaml\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-version: '3.8'\n-\n-services:\n-\n-  frontend:\n-    build: ./frontend\n-    volumes:\n-      - ./frontend:/app\n-    ports:\n-      - \"3000:3000\"\n-    depends_on:\n-      - backend\n-\n-  backend:\n-    build: ./backend\n-    volumes:\n-      - ./backend:/app\n-    ports:\n-      - \"5001:5001\"\n-      \n-  nginx:\n-    build: ./nginx\n-    ports:\n-      - \"80:80\"\n-    depends_on:\n-      - frontend\n-      - backend\n",
    "diff_active": "",
    "message_history": [],
    "message_prompt": "In app.py, create a new top-level dict called 'embeddings_database'. Before line 39 (getting embeddings), make a subset of items not in the embeddings_database, and only batch_get those. Keep everything else unchanged.",
    "message_edit": "I will modify `app.py` to include a new top-level dictionary called `embeddings_database`. I will then update the `get_word_vectors` function to check if the words are already in `embeddings_database` before calling `batch_get` to retrieve embeddings for only those words that are not already present in the database.\n\nSteps:\n1. Create a new top-level dictionary called `embeddings_database` in `app.py`.\n2. Modify the `get_word_vectors` function to check for existing embeddings in `embeddings_database` before calling `batch_get`.",
    "context": [
        "backend/app.py",
        "backend/embeddings.py"
    ],
    "diff_edit": "diff --git a/backend/app.py b/backend/app.py\nindex 274909d..b49c566 100644\n--- a/backend/app.py\n+++ b/backend/app.py\n@@ -20,2 +20,4 @@ pcas = {}\n \n+# A database to store word embeddings\n+embeddings_database = {}\n \n@@ -38,3 +40,7 @@ def get_word_vectors(\n     words = list(set(_highlight + _oxford_3000))\n-    embeddings = model.batch_get(words)\n+    new_words = [w for w in words if w not in embeddings_database]\n+    if new_words:\n+        new_embeddings = model.batch_get(new_words)\n+        embeddings_database.update({w: e for w, e in zip(new_words, new_embeddings)})\n+    embeddings = [embeddings_database[w] for w in words]\n     index = {w: e for w, e in zip(words, embeddings)}\n",
    "test_command": "",
    "version": "0.1.0"
}