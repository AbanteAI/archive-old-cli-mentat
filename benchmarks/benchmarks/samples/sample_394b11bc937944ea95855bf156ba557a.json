{
    "title": "Add camera placeholder camera movement",
    "description": "",
    "id": "394b11bc937944ea95855bf156ba557a",
    "parent_id": "",
    "repo": "http://github.com/granawkins/latent-dictionary",
    "merge_base": "54d6e874c37ea9c8e7d582ddfe2a3ba5cb60b38d",
    "diff_merge_base": "",
    "diff_active": "diff --git a/frontend/src/App.js b/frontend/src/App.js\nindex e82a57e..452cf27 100644\n--- a/frontend/src/App.js\n+++ b/frontend/src/App.js\n@@ -7,2 +7,3 @@ import { Canvas } from '@react-three/fiber'\n import Dot from './Dot';\n+import Camera from './Camera';\n import Navigation from './navigation/Navigation';\n@@ -33,2 +34,3 @@ const DotMemo = React.memo(Dot);\n \n+const STARTING_WORDS = ['man', 'woman', 'king', 'queen']\n const App = () => {\n@@ -43,3 +45,3 @@ const App = () => {\n     // On page load -> set default corpus, oxford 3000\n-    const fetchIndex = async () => {\n+    const fetchIndex = async (initialize=false) => {\n         setIsLoading(true)\n@@ -51,3 +53,3 @@ const App = () => {\n             Object.entries(data.vectors).forEach(([word, coordinates]) => {\n-                newCorpus[word] = { coordinates, selected: false }\n+                newCorpus[word] = { coordinates, selected: initialize && STARTING_WORDS.includes(word) }\n             })\n@@ -61,3 +63,5 @@ const App = () => {\n         if (Object.keys(corpus).length === 0 && !isLoading) {\n-            fetchIndex()\n+            fetchIndex(true).then(() => {\n+                setSearchTerm(STARTING_WORDS)\n+            })\n         }\n@@ -153,2 +157,5 @@ const App = () => {\n     }, [corpus]);\n+    const selectedCorpus = Object.fromEntries(\n+        Object.entries(corpus).filter(([word, data]) => data.selected).map(([word, data]) => [word, data.coordinates])\n+    )\n \n@@ -168,3 +175,3 @@ const App = () => {\n                 <pointLight position={[10, 10, 10]} />\n-                <perspectiveCamera position={[0, 0, 5]} />\n+                <Camera selectedCorpus={selectedCorpus} />\n                 <OrbitControls />\ndiff --git a/frontend/src/Camera.js b/frontend/src/Camera.js\nnew file mode 100644\nindex 0000000..5a7dd9c\n--- /dev/null\n+++ b/frontend/src/Camera.js\n@@ -0,0 +1,37 @@\n+import { useEffect, useState } from 'react';\n+import { useFrame } from '@react-three/fiber';\n+\n+const Camera = ({ selectedCorpus }) => {\n+\n+    const [targetCoordinates, setTargetCoordinates] = useState([0, 0, 0])\n+    useEffect(() => {\n+        if (selectedCorpus) {\n+            const newTargetCoordiantes = [0, 0, 0]\n+            Object.values(selectedCorpus).forEach(coordinates => {\n+                newTargetCoordiantes[0] += coordinates[0]\n+                newTargetCoordiantes[1] += coordinates[1]\n+                newTargetCoordiantes[2] += coordinates[2]\n+            })\n+            newTargetCoordiantes[0] /= Object.keys(selectedCorpus).length\n+            newTargetCoordiantes[1] /= Object.keys(selectedCorpus).length\n+            newTargetCoordiantes[2] /= Object.keys(selectedCorpus).length\n+            setTargetCoordinates(newTargetCoordiantes)\n+        }\n+    }, [selectedCorpus])\n+\n+\n+    let frameCount = 0;\n+    useFrame((state) => {\n+        if (frameCount === 0) {\n+            state.camera.position.set(0, 0, 25);\n+        }\n+        frameCount++;\n+    });\n+\n+    \n+    return (\n+        <perspectiveCamera position={[0, 0, 25]} />\n+    );\n+};\n+\n+export default Camera;\n",
    "message_history": [],
    "message_prompt": "I want my camera to step toward targetCoordiantes every frame.",
    "message_edit": "I will update the `Camera.js` file to include the logic for stepping the camera towards the target coordinates every frame.\n\nSteps:\n1. Modify the `useFrame` hook in `Camera.js` to include the logic for moving the camera towards `targetCoordinates`.\n\n\nPlease note that you will need to have THREE imported in your `Camera.js` file to use `THREE.Vector3`. If it's not already imported, you will need to add the following import statement at the top of the file:",
    "context": [
        "frontend/src/Camera.js",
        "frontend/src/App.js"
    ],
    "diff_edit": "diff --git a/frontend/src/Camera.js b/frontend/src/Camera.js\nindex 5a7dd9c..ba274dc 100644\n--- a/frontend/src/Camera.js\n+++ b/frontend/src/Camera.js\n@@ -1 +1,2 @@\n+import * as THREE from 'three';\n import { useEffect, useState } from 'react';\n@@ -24,4 +25,7 @@ const Camera = ({ selectedCorpus }) => {\n     useFrame((state) => {\n+        const step = 0.05; // Define the step size\n+        const camera = state.camera;\n+        camera.position.lerp(new THREE.Vector3(...targetCoordinates), step);\n         if (frameCount === 0) {\n-            state.camera.position.set(0, 0, 25);\n+            camera.position.set(0, 0, 25);\n         }\n",
    "test_command": "",
    "version": "0.1.0"
}