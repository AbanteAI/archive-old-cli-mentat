{
    "title": "Add error modal with timeout",
    "description": "",
    "id": "a9b92fb40ba64389ac1b05c035ff6979",
    "parent_id": "",
    "repo": "http://github.com/granawkins/latent-dictionary",
    "merge_base": "658915d2cb5df2d51a41593e1831e59d03685bc3",
    "diff_merge_base": "",
    "diff_active": "diff --git a/frontend/src/App.js b/frontend/src/App.js\nindex 8951eee..8331916 100644\n--- a/frontend/src/App.js\n+++ b/frontend/src/App.js\n@@ -11,32 +11,4 @@ import Navigation from './navigation/Navigation';\n \n-/*\n-ACTIONS TO SUPPORT\n-1. Load page (/api)\n-2. Search for word ()\n-*/\n-\n-const fetchApi = async (route=\"/api\", method=\"GET\", args={}) => {\n-    try {\n-        const headers = { 'Content-Type': 'application/json'}\n-        const token = localStorage.getItem('userToken')\n-        if (token) {\n-            headers['Authorization'] = `Bearer ${token}`\n-        }    \n-        const response = await fetch(route, {\n-            method,\n-            headers,\n-            ...(method === \"GET\" ? {} : {body: JSON.stringify(args)}),\n-        });\n-        const data = await response.json();\n-        if (data.error) {\n-            throw new Error(data.error);\n-        } else if (data.token) {\n-            localStorage.setItem('userToken', data.token);\n-        }\n-        return data;\n-    } catch (error) {\n-        // TODO: Show the user, intercept captcha errors\n-        console.log(error);\n-    }\n-}\n+\n+const STARTING_WORDS = ['man', 'woman', 'king', 'queen']\n \n@@ -46,5 +18,4 @@ const DotMemo = React.memo(Dot);\n \n-const STARTING_WORDS = ['man', 'woman', 'king', 'queen']\n const App = () => {\n-\n+    \n     const [isLoading, setIsLoading] = useState(false)\n@@ -54,4 +25,28 @@ const App = () => {\n     const [searchHistory, setSearchHistory] = useState([])\n-\n-\n+    \n+    const fetchApi = async (route=\"/api\", method=\"GET\", args={}) => {\n+        try {\n+            const headers = { 'Content-Type': 'application/json'}\n+            const token = localStorage.getItem('userToken')\n+            if (token) {\n+                headers['Authorization'] = `Bearer ${token}`\n+            }    \n+            const response = await fetch(route, {\n+                method,\n+                headers,\n+                ...(method === \"GET\" ? {} : {body: JSON.stringify(args)}),\n+            });\n+            const data = await response.json();\n+            if (data.error) {\n+                throw new Error(data.error);\n+            } else if (data.token) {\n+                localStorage.setItem('userToken', data.token);\n+            }\n+            return data;\n+        } catch (error) {\n+            // TODO: Show the user, intercept captcha errors\n+            console.log(error);\n+        }\n+    }\n+    \n     // On page load -> set default corpus, oxford 3000\n",
    "message_history": [],
    "message_prompt": "Create a new component called ErrorModal, formatted just like the FAQButton but in the bottom right hand corner. When fetchApi gets an error, show it there for 5 seconds then disappear.",
    "message_edit": "I will create a new component called ErrorModal, similar to the FAQModal, and position it in the bottom right corner. I will also modify the fetchApi function in App.js to display the ErrorModal when an error occurs, and set a timeout to hide it after 5 seconds.\n\nSteps:\n1. Create a new file for the ErrorModal component.\n2. Add the ErrorModal component to App.js.\n3. Modify the fetchApi function to handle errors by showing the ErrorModal.\n4. Set a timeout to hide the ErrorModal after 5 seconds.",
    "context": [
        "frontend/src/navigation/FAQ.js",
        "frontend/src/App.js"
    ],
    "diff_edit": "diff --git a/frontend/src/App.js b/frontend/src/App.js\nindex 8331916..0d74f30 100644\n--- a/frontend/src/App.js\n+++ b/frontend/src/App.js\n@@ -9,2 +9,3 @@ import FAQButton from './navigation/FAQ';\n import LoadingHandler from './LoadingHandler';\n+import ErrorModal from './ErrorModal';\n import Navigation from './navigation/Navigation';\n@@ -25,2 +26,3 @@ const App = () => {\n     const [searchHistory, setSearchHistory] = useState([])\n+    const [error, setError] = useState(null);\n     \n@@ -46,4 +48,4 @@ const App = () => {\n         } catch (error) {\n-            // TODO: Show the user, intercept captcha errors\n-            console.log(error);\n+            setError(error.message);\n+            setTimeout(() => setError(null), 5000);\n         }\n@@ -188,2 +190,3 @@ const App = () => {\n             <FAQButton />\n+            {error && <ErrorModal message={error} onClose={() => setError(null)} />}\n         </>\ndiff --git a/frontend/src/ErrorModal.js b/frontend/src/ErrorModal.js\nnew file mode 100644\nindex 0000000..305a29c\n--- /dev/null\n+++ b/frontend/src/ErrorModal.js\n@@ -0,0 +1,21 @@\n+import React from 'react';\n+\n+const ErrorModal = ({ message, onClose }) => (\n+    <div\n+        style={{\n+            position: 'fixed',\n+            bottom: '10px',\n+            right: '10px',\n+            backgroundColor: 'black',\n+            color: 'white',\n+            padding: '20px',\n+            borderRadius: '4px',\n+            zIndex: 1000,\n+        }}\n+        onClick={onClose}\n+    >\n+        <strong>Error:</strong> {message}\n+    </div>\n+);\n+\n+export default ErrorModal;\n",
    "test_command": "",
    "version": "0.1.0"
}